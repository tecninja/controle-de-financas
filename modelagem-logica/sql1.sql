-- MySQL Script generated by MySQL Workbench
-- Mon Oct 10 23:11:53 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `financas` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `financas`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `financas`.`usuario` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`receita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`receita` (
  `id` INT NOT NULL,
  `descricao` VARCHAR(60) NOT NULL COMMENT 'Recebe a descrição da origem da receita',
  `tipo` CHAR(1) NOT NULL COMMENT 'Recebe F para receita FIXA e V para receita VARIÁVEL',
  `usuario_id` INT NOT NULL,
  `valor` FLOAT NOT NULL,
  `data_prevista` DATE NOT NULL COMMENT 'Data em que o valor ficou disponível em saldo corrente',
  `data_realizada` DATE NULL,
  `data_criacao` DATE NOT NULL,
  `atualizado_em` DATETIME NOT NULL,
  PRIMARY KEY (`id`, `usuario_id`),
  INDEX `fk_receita_usuario_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_receita_usuario`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`despesa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`despesa` (
  `id` INT NOT NULL,
  `tipo` CHAR(1) NOT NULL COMMENT 'Deve receber se a uma despesa é fixa ou recorrente. sendo \'F\' para fizo e \'R\' para recorrente.\n\n',
  `descricao` VARCHAR(60) NOT NULL,
  `valor` FLOAT NOT NULL,
  `data_criacao` DATE NOT NULL,
  `data_prevista` DATE NOT NULL,
  `data_pagamento` DATE NULL,
  `atualizado_em` DATETIME NOT NULL,
  `nivel_prioridade` SMALLINT NOT NULL COMMENT 'recebe valores entre 1 e 3 onde quanto maior, mais importante.\n',
  `categoria_despesa_id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `forma_pgto` CHAR(1) NOT NULL COMMENT 'Recebe \'C\' para pagamento no cartão de crédito e \'S\' para pagamento com saldo bancario independente da forma (Ex: pix, ted, doc, saque).',
  `categoria` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `categoria_despesa_id`, `usuario_id`),
  INDEX `fk_despesa_usuario1_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_despesa_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`poupanca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`poupanca` (
  `id` INT NOT NULL,
  `banco` VARCHAR(20) NOT NULL COMMENT 'Deve receber o nome do banco',
  `saldo` FLOAT NOT NULL,
  `usuario_id` INT NOT NULL,
  PRIMARY KEY (`id`, `usuario_id`),
  INDEX `fk_poupanca_usuario1_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_poupanca_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cartao_credito`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cartao_credito` (
  `id` INT NOT NULL,
  `usuario_id` INT NOT NULL,
  `nome` VARCHAR(45) NOT NULL COMMENT 'recebe o nome do caertão (Ex: Nunbank)',
  `limite_cadastrado` FLOAT NOT NULL,
  `limite_disponivel` FLOAT NOT NULL,
  `vencimento_fatura` DATE NOT NULL,
  `vencimento_cartao` DATE NULL,
  PRIMARY KEY (`id`, `usuario_id`),
  CONSTRAINT `fk_cartao_credito_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`extrato_bancario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`extrato_bancario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `valor` FLOAT NOT NULL,
  `tipo` CHAR(3) NOT NULL COMMENT 'Parametros:\nPAG - Pagamentos de títulos\nDEB - Compra a débito\nPIX - Transferencias (incluindo ted e doc)\nAPL - Aplicações e Poupança\nREC - Entrada de Receita\nRES - Resgate de aplicação\n',
  `data_transacao` DATE NULL,
  `instituicao` VARCHAR(45) NOT NULL COMMENT 'Recebe o nome do banco',
  `agendado` TINYINT NOT NULL COMMENT '0 - False\n1 - True',
  `usuario_id` INT NOT NULL,
  PRIMARY KEY (`id`, `usuario_id`),
  INDEX `fk_extrato_bancario_usuario1_idx` (`usuario_id` ASC) VISIBLE,
  CONSTRAINT `fk_extrato_bancario_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `mydb`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
